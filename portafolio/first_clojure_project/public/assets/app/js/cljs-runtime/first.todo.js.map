{"version":3,"sources":["first/todo.cljs"],"mappings":";AAKA,mBAAA,mFAAA,YAAA,aAAA,cAAA,7IAAeA;AAKf,AAAA;AAAA,uBAAA,iBAAAC,WAAA,sCAAAC,qBAAAC,9GAAiBS;AAAjB,AAAA,IAAAR,aAAA,mFAAA,AAAAC,8BAAAH,sBAAAC;IAAAG,aAAA,AAAAC,4CAAAH,WAAA,IAAA;IAAAE,iBAAA,AAAAE,4BAAAF;WAAA,AAAAG,4CAAAH,eAAA,lEAAoCO;AAApC,AAAA;sDACSA,tDA6JJ,OAAA,AAAA0C,qCAAA,KAAA;;AA9JL,AAAA,GAAA,AAAA7C;AAAA,IAAAC,WAAAV;AAAA,AAAA,CAAA,AAAAU,uBAAA;;AAAAA;;AAAAV;;;;AAAA;AAAA;AAAiBW,AAGjB,AAAA;AAAA,uBAAA,iBAAAE,WAAA,sCAAAZ,qBAAAC,9GAAiBe;AAAjB,AAAA,IAAAH,aAAA,mFAAA,AAAAV,8BAAAH,sBAAAC;IAAAa,aAAA,AAAAT,4CAAAQ,WAAA,IAAA;IAAAC,iBAAA,AAAAR,4BAAAQ;YAAA,AAAAP,4CAAAO,eAAA,nEAAoCG;AAApC,AAAA;sDAEG,iBAAAC,qBAAA,oDAAAC,hJAyJE,OAAA,AAAAkC,qCAAA,KAAA;AAzJF,AAAA,YAAAjC,kBAAA,KAAA;AAAA,AAAA,IAAAD,eAAAA;;AAAA,AAAA,IAAAE,qBAAA,AAAAC,cAAAH;AAAA,AAAA,GAAAE;AAAA,AAAA,IAAAF,eAAAE;AAAA,AAAA,GAAA,AAAAE,6BAAAJ;AAAA,IAAAK,kBA67EgD,AAAAmC,sBAAAxC;IA77EhDM,qBAAA,AAAAC,gBAAAF;IAAAG,WAAA,AAAAC,uBAAAH;AAAA,AAAA,GAAA,AAAA,iBAAAI,WAAA;;AAAA,AAAA,GAAA,CAAAA,WAAAJ;AAAA,WAAA,AAAAK,eAAAN,gBAAAK,tCAAMlB;AAAN,AAAA,AAAA,AAAAoB,uBAAAJ,8CACKjB,yDAAgBC,YAAWA,1GAiC5B,AAAA,AAAA0C,0DAAA,iBAAAC,WAAA,EAAA,WAAA;AAAA,AAAAA;;;AAlCJ,eAAA,CAAAzB,WAAA;;;;AAAA;;;;;AAAA,OAAAG,qBAAA,AAAAC,gBAAAN,UAAA,AAAAO,0CAAA,AAAAC,qBAAAhB;;AAAA,OAAAa,qBAAA,AAAAC,gBAAAN,UAAA;;;AAAA,WAAA,AAAAS,gBAAAjB,vBAAMR;AAAN,AAAA,OAAA0B,oDACK3B,yDAAgBC,YAAWA,1GAiC5B,AAAA,AAAA0C,0DAAA,iBAAAE,WAAA,EAAA,WAAA;AAAA,AAAAA;MAlCJ,AAAArB,0CAAA,AAAAI,eAAAnB;;;AAAA;;;;GAAA,KAAA;;AAAA,AAAA,OAAAD,mBAAWD;;;AAFd,AAAA,GAAA,AAAAT;AAAA,IAAAO,WAAAH;AAAA,AAAA,CAAA,AAAAG,uBAAA;;AAAAA;;AAAAH;;;;AAAA;AAAA;AAAiBI,AAKjB,sBAAA,tBAAgBuB,oDAAUC,gBAAgBC;AAA1C,AACE,AAAiBA;;AACjB,IAAAC,WACC,WAAKC;AAAL,AACE,OAACC,6CAAKD,YACA,AAAA,AAAA,AAAIF;;AAHb,AAAA,sGAAAC,sCAAAA,pIAACF,gDAAAA,0DAAAA;;AAQH,AAAA;AAAA,2BAAA,iBAAAK,WAAA,0CAAA7C,qBAAAC,tHAAO+C;AAAP,AAAA,IAAAF,aAAA,mFAAA,AAAA3C,8BAAAH,sBAAAC;AAAA,AAAA;AACE,IAAAgD,aAAoC,AAACC,sBAAgBpD;kBAArD,AAAAO,4CAAA4C,WAAA,IAAA,zEAAON;sBAAP,AAAAtC,4CAAA4C,WAAA,IAAA,7EAAmBT;AAAnB,AACE,AAAKW,eAAErD;;oMAGc,AAACsD,gDAAQb,oBAASC,zJAkItC,AAAA,AAAAa,qCAAA,OAAA,iBAAAI,WAAA,EAAA,zLAKA,OAAA,AAAAJ,qCAAA,MAAA,KAAA,AAAA,AAAAA,qCAAA,KAAA,KAAA;AALA,AAAAI;KAAA,AAAA,AAAAJ,qCAAA,QAAA,iBAAAK,WAAA,EAAA,OAAA,OAAA,OAAA;AAAA,AAAAA;2GA/HG1C,2DAAkB2B,hGAanB,AAAA,AAAAU,0DAAA,iBAAAG,WAAA,EAAA,xJAuHF,AAAA,AAAAH,qCAAA,SAAA,KAAA;AAvHE,AAAAG;;;AArBP,AAAA,GAAA,AAAAhD;AAAA,IAAAuC,WAAAF;AAAA,AAAA,CAAA,AAAAE,uBAAA;;AAAAA;;AAAAF;;;;AAAA;AAAA;AAAOG,AAYP","names":["first.todo/todos","G__19940","props__11902__auto__","maybe-ref__11903__auto__","vec__19941","helix.core/extract-cljs-props","map__19944","cljs.core.nth","cljs.core/--destructure-map","cljs.core.get","goog/DEBUG","G__19945","first.todo/list-item","todo","G__19947","vec__19948","map__19951","G__19960","first.todo/todo-list","items","iter__5523__auto__","s__19953","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","cljs.core/count","b__19955","cljs.core/chunk-buffer","i__19954","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__19952","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","first.todo/add-todo","set-todos-state","event","G__19961","todos-state","cljs.core.conj","G__19963","vec__19964","G__19976","first.todo/todo-list-app","vec__19967","helix.hooks/use-state","first.todo/t","cljs.core.partial","helix.core/get-react","obj19957","obj19959","obj19975","obj19971","obj19973","cljs.core/chunk-first"],"sourcesContent":["(ns first.todo\n  (:require [helix.core :refer [defnc $]]\n            [helix.hooks :as hooks]\n            [helix.dom :as d]))\n\n(def ^:private todos [\"buy butts\"\n            \"kick butts\"\n            \"spank butts\"\n            \"massage butts\"])\n\n(defnc ^:private list-item [{:keys [todo]}]\n  (d/li  todo))\n\n(defnc ^:private todo-list [{:keys [items]}]\n  (d/ul\n   (for [todo items]\n     ($ list-item {:key todo :todo todo}))))\n\n(defn ^:private add-todo [set-todos-state event]\n  (.preventDefault event)\n  (set-todos-state \n   (fn [todos-state]\n     (conj todos-state\n           (.. event \n               -target \n               -content \n               -value)))))\n\n(defnc todo-list-app []\n  (let [[todos-state set-todos-state] (hooks/use-state todos)]\n    (def t todos)\n    (d/div\n     (d/h1 \"TODOS\")\n     (d/form {:on-submit (partial add-todo set-todos-state)}\n             (d/input {:type \"text\" :name \"content\"})\n             (d/button \"add todo\"))\n     ($ todo-list {:items todos-state}))))\n\n\n\n(comment\n  \n  (defn add [a b c] (+ a b c))\n\n  (add 1 2 1)\n\n  (def add-to-1-and-2 (partial add 1 2))\n\n  (add-to-1-and-2 3)\n\n  (def add-to-one (partial add 1))\n\n  (add-to-one 4)\n\n\n  (->> [1 2 43]\n       (map inc)\n       (map (partial )))\n\n\n\n  (let [input (js/document.querySelector \"input[name=content]\")]\n\n    (doseq [new-todo [\"yksi\" \"kaksi\" \"kolme\"]]\n      (js/setTimeout (fn []\n                       (set! (.-value input) new-todo) \n                       (.click (js/document.querySelector \"button\")))\n                     1000)))\n  )"]}